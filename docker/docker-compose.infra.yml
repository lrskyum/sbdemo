version: '3.8'

services:
  kafka:
    image: &kafka-image bitnami/kafka:3.9
    container_name: kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094,EXTERNAL://localhost:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--bootstrap-server=localhost:9094", "--list" ]
      interval: 3s
      timeout: 2s
      retries: 10
    networks:
      - sbdemo

  kafka-init:
    image: *kafka-image
    container_name: kafka-init
    working_dir: /opt/bitnami/kafka/bin
    entrypoint: /bin/bash
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      kafka-topics.sh --create --if-not-exists --topic basket --replication-factor=1 --partitions=3 --bootstrap-server kafka:9094
    networks:
      - sbdemo

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "10092:8081"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      SERVER_PORT: 8081
    depends_on:
      - kafka
    networks:
      - sbdemo

  keycloak:
    build:
      context: ./keycloak
      args:
        KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      dockerfile: Dockerfile
    image: keycloak:latest
    container_name: keycloak
    depends_on:
      - db
    ports:
      - "18080:8080"
      - "18443:8443"
    networks:
      - sbdemo

  db:
    image: postgres
    container_name: postgres
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/initdb.d:/docker-entrypoint-initdb.d"
    networks:
      - sbdemo

networks:
  sbdemo:
    driver: bridge
